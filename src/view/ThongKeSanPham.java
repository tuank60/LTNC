/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import Model.MyConnect;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.BaseFont;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.concurrent.Phaser;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.Document;

/**
 *
 * @author HaiNguyen
 */
public class ThongKeSanPham extends javax.swing.JFrame {

    /**
     * Creates new form ThongKeSanPhamsetTitle(title);
     */
    private MyConnect mycon;
    private Statement statement=null;
    public ThongKeSanPham() {
        initComponents();
        this.setTitle("HỆ THỐNG BÁN HÀNG");
        this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
       mycon=new MyConnect();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JCBtksp = new javax.swing.JComboBox<>();
        JBxf = new javax.swing.JButton();
        JBtl = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        JTBsp = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        JCBtksp.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Theo Tên Sản Phẩm", "Theo Tên Nhà Sản Xuất" }));
        JCBtksp.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                JCBtkspItemStateChanged(evt);
            }
        });
        JCBtksp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JCBtkspActionPerformed(evt);
            }
        });

        JBxf.setText("Xuất File");
        JBxf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBxfActionPerformed(evt);
            }
        });

        JBtl.setText("Trở Lại");
        JBtl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBtlActionPerformed(evt);
            }
        });

        JTBsp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tên Sản Phẩm", "ID Sản Phẩm "
            }
        ));
        jScrollPane2.setViewportView(JTBsp);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(JCBtksp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(JBxf)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(JBtl)))
                .addGap(468, 468, 468))
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 557, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(JCBtksp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JBxf)
                    .addComponent(JBtl))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JBtlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBtlActionPerformed
        try {
            // TODO add your handling code here:
            this.dispose();
            Home home= new Home();
            home.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(ThongKeSanPham.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(ThongKeSanPham.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_JBtlActionPerformed

    private void JCBtkspItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_JCBtkspItemStateChanged
        // TODO add your handling code here:
        ResultSet rs;
        
        if(JCBtksp.getSelectedIndex()==0)
        {
                DefaultTableModel tableModel =new DefaultTableModel();

            try {
                JTBsp.setModel(tableModel);
                tableModel.addColumn("Tên Sản Phẩm");
                tableModel.addColumn("Giá Tiền");
              String sql="SELECT TenSP,GiaTien FROM quanlybanhang.sanpham";
                
                   statement=(Statement)mycon.getConnection().createStatement();
                    rs=statement.executeQuery(sql);
                   while(rs.next())
                   {

                    String sanpham[] = {rs.getString("TenSP"),rs.getString("GiaTien")};
                    tableModel.addRow(sanpham);

                   }
                    
            } catch (IOException ex) {
               
            }
            catch (SQLException ex) {
                   
                }
        }
        if(JCBtksp.getSelectedIndex()==1)
        {
                            DefaultTableModel tableModel =new DefaultTableModel();

            try {
                JTBsp.setModel(tableModel);
                tableModel.addColumn("Hãng Sản Phẩm");
                tableModel.addColumn("Địa Chỉ");
                String sql="SELECT TenHSP,DiaChi FROM quanlybanhang.hangsp";
               
                statement=(Statement)mycon.getConnection().createStatement();
               
                 rs=statement.executeQuery(sql);
                 while(rs.next())
                 {
                  String hangsanpham[] = {rs.getString("TenHSP"),rs.getString("DiaChi")};
                    tableModel.addRow(hangsanpham);
                 }
            } 
           
            catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }
             catch (IOException ex) {
                Logger.getLogger(ThongKeSanPham.class.getName()).log(Level.SEVERE, null, ex);
            }
            
                
        }
    }//GEN-LAST:event_JCBtkspItemStateChanged

    private void JBxfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBxfActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model1 = (DefaultTableModel) JTBsp.getModel();
         if (model1.getRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Chưa có dữ liệu để xuất file !");
        } else {
            JFileChooser chooser = new JFileChooser();
           // chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
          //  chooser.setAcceptAllFileFilterUsed(false);
            FileNameExtensionFilter ft = new FileNameExtensionFilter("PDF Documents", "pdf");
            chooser.addChoosableFileFilter(ft);
            int returnVal = chooser.showSaveDialog(this);
            if (returnVal == javax.swing.JFileChooser.APPROVE_OPTION) {
                try {
                    String fileName = chooser.getSelectedFile().getName();
                    String dir = chooser.getCurrentDirectory().toString();
                    File f = new File(dir + "\\" + fileName + ".pdf");

                    if (f.exists()) {
                        JOptionPane.showMessageDialog(this, "Tên file đã tồn tại, mời bạn chọn tên khác !");
                    } else {
                        com.itextpdf.text.Document document = new com.itextpdf.text.Document(PageSize.A4, 50, 50, 10, 50);
                        PdfWriter writer;
                        // khởi tạo một PdfWriter truyền vào document và FileOutputStream
                        writer = PdfWriter.getInstance(document, new FileOutputStream(dir + "\\" + fileName + ".pdf"));
                        document.open();
                         Font f1 = new Font(BaseFont.createFont("/assets/vuArial.ttf", BaseFont.IDENTITY_H, BaseFont.EMBEDDED));
                        f1.setSize(16);
                        f1.setColor(BaseColor.BLACK);
                        Paragraph p = new Paragraph("THỐNG KÊ SẢN PHẨM", f1);
                        p.setAlignment(Element.ALIGN_CENTER);
                        document.add(p);
                         Font f2 = new Font(BaseFont.createFont("/assets/vuArial.ttf", BaseFont.IDENTITY_H, true));
                        f2.setSize(10);
                        f2.setColor(BaseColor.BLACK);
                        Font f3 = new Font(BaseFont.createFont("/assets/vuArial.ttf", BaseFont.IDENTITY_H, true));
                        f3.setSize(10);
                        f3.setColor(BaseColor.BLACK);
                        Font f4 = new Font(BaseFont.createFont("/assets/vuArial.ttf", BaseFont.IDENTITY_H, true));
                        f4.setSize(6);
                        f4.setColor(BaseColor.BLACK);
                        f4.setStyle("ITALIC");
                        PdfPTable pdfT=new PdfPTable(2);
                        pdfT.setSpacingBefore(25); pdfT.setSpacingAfter(25); 

                        document.add(pdfT);
                         if(JCBtksp.getSelectedIndex()==0)
                         {
                              Paragraph p1 = new Paragraph("(theo tên sản phẩm)", f4);
                                p1.setAlignment(Element.ALIGN_CENTER);
                             document.add(p1);
                             PdfPCell cell1=new PdfPCell(new Phrase("Tên Sản Phẩm",f2));
                         pdfT.addCell(cell1);
                         PdfPCell cell2=new PdfPCell(new Phrase("Giá Tiền",f3));
                         pdfT.addCell(cell2);
                          
                         }
                            if(JCBtksp.getSelectedIndex()==1)
                         {
                             Paragraph p1 = new Paragraph("(theo hang sản phẩm)", f4);
                              p1.setAlignment(Element.ALIGN_CENTER);
                             document.add(p1);
                             PdfPCell cell1=new PdfPCell(new Phrase("Tên Hãng Sản Phẩm",f2));
                         pdfT.addCell(cell1);
                         PdfPCell cell2=new PdfPCell(new Phrase("Địa Chỉ",f3));
                         pdfT.addCell(cell2);
                          
                         }
                            for (int i = 0; i < model1.getRowCount(); i++) {
                            pdfT.addCell(new Phrase(model1.getValueAt(i, 0).toString(), f3));
                            pdfT.addCell(new Phrase(model1.getValueAt(i, 1).toString(), f3));
                        }
                            document.add(pdfT);
                         Calendar cal = new GregorianCalendar();
                        int year = cal.get(Calendar.YEAR);
                        int month = cal.get(Calendar.MONTH);
                        int day = cal.get(Calendar.DAY_OF_MONTH);
                        String date = (day + "/" + (month + 1) + "/" + year);
                        Paragraph p1 = new Paragraph("\nHà Nội , " + date, f4);
                        p1.setAlignment(Element.ALIGN_RIGHT);
                        document.add(p1);
                        document.close();
                        JOptionPane.showMessageDialog(this, "Lưu file thành công !");
                    }
                
                }
                catch (Exception e) {
                    e.printStackTrace();
            }
         }
         }

    }//GEN-LAST:event_JBxfActionPerformed

    private void JCBtkspActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JCBtkspActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JCBtkspActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ThongKeSanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ThongKeSanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ThongKeSanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ThongKeSanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ThongKeSanPham().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JBtl;
    private javax.swing.JButton JBxf;
    private javax.swing.JComboBox<String> JCBtksp;
    private javax.swing.JTable JTBsp;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
